<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>